<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>